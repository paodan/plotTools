% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom_errorbar2.R
\docType{data}
\name{geom_errorbar2}
\alias{geom_errorbar2}
\alias{GeomUperrorbar}
\alias{GeomDownerrorbar}
\title{Plot errorbar by providing error ranges}
\format{
An object of class \code{GeomUperrorbar} (inherits from \code{Geom}, \code{ggproto}, \code{gg}) of length 9.

An object of class \code{GeomDownerrorbar} (inherits from \code{Geom}, \code{ggproto}, \code{gg}) of length 9.
}
\usage{
geom_errorbar2(
  mapping = NULL,
  data = NULL,
  stat = "identity",
  position = "identity",
  ...,
  errorbar_direction = c("updown", "up", "down"),
  na.rm = FALSE,
  orientation = NA,
  show.legend = NA,
  inherit.aes = TRUE
)

GeomUperrorbar

GeomDownerrorbar
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by aes(). If specified and inherit.aes = TRUE (the default), it is combined with the default mapping at the top level of the plot. You must supply mapping if there is no plot mapping.}

\item{data}{The data to be displayed in this layer. There are three options:

  If NULL, the default, the data is inherited from the plot data as specified in the call to ggplot().

A data.frame, or other object, will override the plot data. All objects will be fortified to produce a data frame. See fortify() for which variables will be created.

A function will be called with a single argument, the plot data. The return value must be a data.frame, and will be used as the layer data. A function can be created from a formula (e.g. ~ head(.x, 10)).}

\item{stat}{The statistical transformation to use on the data for this layer, either as a ggproto Geom subclass or as a string naming the stat stripped of the stat_ prefix (e.g. "count" rather than "stat_count")}

\item{position}{Position adjustment, either as a string naming the adjustment (e.g. "jitter" to use position_jitter), or the result of a call to a position adjustment function. Use the latter if you need to change the settings of the adjustment.}

\item{errorbar_direction}{the direction of the error bars, either
"updown", "up", or "down".}

\item{na.rm}{If FALSE, the default, missing values are removed with a warning. If TRUE, missing values are silently removed.}

\item{orientation}{The orientation of the layer. The default (NA) automatically determines the orientation from the aesthetic mapping. In the rare event that this fails it can be given explicitly by setting orientation to either "x" or "y". See the Orientation section for more detail.}

\item{show.legend}{logical. Should this layer be included in the legends? NA, the default, includes if any aesthetics are mapped. FALSE never includes, and TRUE always includes. It can also be a named logical vector to finely select the aesthetics to display.}

\item{inherit.aes}{If FALSE, overrides the default aesthetics, rather than combining with them. This is most useful for helper functions that define both data and aesthetics and shouldn't inherit behaviour from the default plot specification, e.g. borders().}

\item{import}{ggplot2}
}
\description{
Plot errorbar by providing error ranges
}
\examples{
\dontrun{
library(ggplot2)
df <- data.frame(
  trt = factor(c(1, 1, 2, 2)),
  resp = c(1, 5, 3, 4),
  group = factor(c(1, 2, 1, 2)),
  upper = c(1.1, 5.3, 3.3, 4.2),
  lower = c(0.8, 4.6, 2.4, 3.6)
)

p = ggplot(df, aes(trt, resp, colour = group))

# default errorbar in ggplot2
p + geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2)

# also default errorbar in ggplot2
p + geom_errorbar2(aes(ymin = lower, ymax = upper), errorbar_direction = "updown", width = 0.2)

# upper errorbar
(p2 = p + geom_errorbar2(aes(ymax = upper), errorbar_direction = "up", width = 0.2))

# lower errorbar
(p3 = p + geom_errorbar2(aes(ymin = lower), errorbar_direction = "down", width = 0.2))

# upper errorbar first and then lower errorbar
(p4 = p +
    geom_errorbar2(aes(ymax = upper), errorbar_direction = "up", width = 0.2)+
    geom_errorbar2(aes(ymin = lower), errorbar_direction = "down", width = 0.2))


## plot error bar using stat_summary function
df = ToothGrowth
df$dose = as.factor(df$dose)
p = ggplot(df, aes(x=dose, y=len)) +
  geom_dotplot(binaxis='y', stackdir='center', binwidth = 1, dotsize = .5)
p

# Use geom_errorbar()
p + stat_summary(fun.data=mean_sdl, fun.args = list(mult=1),
                 geom="errorbar", color="red", width=0.2) +
  stat_summary(fun.y=mean, geom="point", color="red")

mean_se = function(x, na.rm = TRUE){
  if (na.rm)  x = x[!is.na(x)]
  n = length(x)
  if (n == 0)
    return(c(y = NA, ymin = NA, ymax = NA))
  xbar = sum(x)/n
  se = sd(x)/sqrt(n)
  # the name of the elements in the following vector must be "y", "ymin", and "ymax".
  c(y = xbar, ymin = xbar - se, ymax = xbar + se)
}

p + stat_summary(fun.data=mean_se,
                 geom=GeomUperrorbar, color="red", width=0.2) +
  stat_summary(fun.y=mean, geom="point", color="blue")
}
}
\keyword{datasets}
