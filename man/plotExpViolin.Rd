% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotExpViolin.R
\name{plotExpViolin}
\alias{plotExpViolin}
\title{Violin plot for gene expression data and colored by groups}
\usage{
plotExpViolin(
  data,
  genes,
  annotation,
  pheno_data,
  external_gene_name = "external_gene_name",
  ylab = "norm counts",
  phenocols,
  outname = "./expression_violin",
  namedColors,
  width = 4,
  height = 4,
  namedLabels = NULL,
  assemble = FALSE
)
}
\arguments{
\item{data}{a data frame of gene expression data, where each row is a gene and each column is a sample}

\item{genes}{character vector, a list of genes to plot}

\item{annotation}{a data frame of mapping gene names, the row name must be the same type of IDs as of `genes`}

\item{pheno_data}{a data frame of sample information}

\item{external_gene_name}{the new gene ID column name in annotation, default is "external_gene_name".}

\item{ylab}{character, the label of y axis}

\item{phenocols}{character vector, the column names of pheno_data}

\item{outname}{character, output folder}

\item{namedColors}{named color vector}

\item{width}{figure width in inches}

\item{height}{figure height in inches}

\item{nameedLabels}{named labels for x axis ticks}
}
\value{
a (invisible) list of ggplot objects named by the `genes`
}
\description{
Violin plot for gene expression data and colored by groups
}
\examples{
\dontrun{

expr = createExprData(nGene = 100, nSample = 15, min = 5, max = 10)
genes = c("G001", "G009", "G089")
annotation = data.frame(external_gene_name = paste0("genename", 1:nrow(expr)),
                        row.names = rownames(expr))
pheno_data = data.frame(group = rep(c("A", "B", "C"), each = 5))
ylab = "VSD"
phenocols = "group"
namedColors = c(A = "red", B = "purple", C = "#99335555")
namedLabels = c(A = "GroupA", B = "Group B", C = "Group\nC")

plotExpViolin(expr, genes, annotation, pheno_data, "external_gene_name", ylab,
              phenocols, outname = "./expression_violin",
              namedColors, width = 4, height = 4, namedLabels, assemble = TRUE)
}

}
